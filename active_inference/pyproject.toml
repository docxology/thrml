[project]
name = "active-inference"
version = "0.1.0"
description = "Active Inference implementation using THRML for energy-efficient probabilistic inference"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  {name = "Active Inference Research Team"},
]

dependencies = [
    "thrml>=0.1.3",
    "equinox>=0.11.2",
    "jaxtyping>=0.2.23",
    "jax>=0.4.0",
    "optax>=0.2.4",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
examples = [
    "jupyter>=1.0",
    "matplotlib>=3.7.1",
    "networkx>=2.6.3",
    "scikit-learn>=1.7.0",
    "pandas>=2.0.0",
    "seaborn>=0.12.0",
    "tqdm>=4.65.0",
    "scipy>=1.10.0",
    "psutil>=5.9.0",
]
testing = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.3.2",
    "hypothesis>=6.90.0",
]
development = [
    "black>=25.1.0",
    "ruff>=0.11.0",
    "isort>=5.12.0",
    "pyright>=1.1.399",
    "mypy>=1.5.1",
    "pre-commit>=3.0.0",
]
all = [
    "active-inference[examples,testing,development]",
]

[build-system]
requires = ["setuptools>=65"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { where = ["src"], include = ["active_inference", "active_inference.*"] } }

[tool.ruff]
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "D"]
ignore = [
    "D100", "D104", "D203", "D213",  # Docstring style
    "D102", "D103", "D105", "D107",  # Missing docstrings
    "D400", "D415",  # Docstring punctuation
    "E501",  # Line too long (handled by black)
    "E722",  # Bare except
    "F403",  # Star imports used
    "F722",  # Syntax error in forward annotation (jaxtyping false positives)
    "F821",  # Undefined name in annotation (jaxtyping false positives)
    "F841",  # Unused variable
    "N801", "N803", "N806",  # Naming conventions (A, B, C, D matrices are conventional)
]

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=active_inference",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.pyright]
reportUnnecessaryTypeIgnoreComment = true
include = ["src"]
venvPath = "."
venv = ".venv"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
